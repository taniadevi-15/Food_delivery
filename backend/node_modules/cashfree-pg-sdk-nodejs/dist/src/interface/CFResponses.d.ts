/// <reference types="node" />
import { CFOrderPayResponse, CFOrder, CFPaymentsEntity, CFRefund, CFSettlementsEntity, CFFetchAllSavedInstruments, CFCryptogram, CFLink, CFLinkOrders, CFLinkCancelledResponse } from "../model/models";
interface Dictionary<T> {
    [Key: string]: T;
}
import { IncomingHttpHeaders } from 'http';
declare class CFOrderResponse {
    cfOrder?: CFOrder;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfOrder: CFOrder, cfHeaders?: IncomingHttpHeaders);
}
declare class CFPayResponse {
    cfOrderPayResponse?: CFOrderPayResponse;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfOrderPayResponse: CFOrderPayResponse, cfHeaders?: Dictionary<string>);
}
declare class CFPaymentsForOrderResponse {
    cfPaymentsEntities?: Array<CFPaymentsEntity>;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfPaymentsEntities: Array<CFPaymentsEntity>, cfHeaders?: Dictionary<string>);
}
declare class CFPaymentEntityResponse {
    cfPaymentsEntity?: CFPaymentsEntity;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfPaymentsEntity?: CFPaymentsEntity, cfHeaders?: Dictionary<string>);
}
declare class CFRefundResponse {
    cfRefund?: CFRefund;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfRefund: CFRefund, cfHeaders?: Dictionary<string>);
}
declare class CFAllRefundsResponse {
    cfRefunds?: Array<CFRefund>;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfRefunds: Array<CFRefund>, cfHeaders?: Dictionary<string>);
}
declare class CFSettlementsResponse {
    cfSettlementsEntity?: CFSettlementsEntity;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfSettlementsEntity: CFSettlementsEntity, cfHeaders?: Dictionary<string>);
}
declare class CFAllInstrumentsResponse {
    cfInstruments?: Array<CFFetchAllSavedInstruments>;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfInstruments: Array<CFFetchAllSavedInstruments>, cfHeaders?: Dictionary<string>);
}
declare class CFInstrumentsResponse {
    cfInstrument?: CFFetchAllSavedInstruments;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfInstrument: CFFetchAllSavedInstruments, cfHeaders?: Dictionary<string>);
}
declare class CFCryptogramResponse {
    cfCryptogram?: CFCryptogram;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfCryptogram: CFCryptogram, cfHeaders?: Dictionary<string>);
}
declare class CFLinkResponse {
    cfLink?: CFLink;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfLink: CFLink, cfHeaders?: Dictionary<string>);
}
declare class CFCancelledLinkResponse {
    cfLink?: CFLinkCancelledResponse;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfLink: CFLinkCancelledResponse, cfHeaders?: Dictionary<string>);
}
declare class CFPaymentLinkOrdersRespnse {
    cfLinkOrders?: Array<CFLinkOrders>;
    cfHeaders?: IncomingHttpHeaders;
    constructor(cfLinkOrders?: Array<CFLinkOrders>, cfHeaders?: Dictionary<string>);
}
export { CFOrderResponse, CFPayResponse, CFPaymentsForOrderResponse, CFPaymentEntityResponse, CFRefundResponse, CFAllRefundsResponse, CFSettlementsResponse, CFAllInstrumentsResponse, CFInstrumentsResponse, CFCryptogramResponse, CFLinkResponse, CFCancelledLinkResponse, CFPaymentLinkOrdersRespnse, };
