"use strict";
/**
 * New Payment Gateway APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: nextgenapi@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CFFetchAllSavedInstruments = void 0;
class CFFetchAllSavedInstruments {
    static getAttributeTypeMap() {
        return CFFetchAllSavedInstruments.attributeTypeMap;
    }
}
exports.CFFetchAllSavedInstruments = CFFetchAllSavedInstruments;
CFFetchAllSavedInstruments.discriminator = undefined;
CFFetchAllSavedInstruments.attributeTypeMap = [
    {
        "name": "customerId",
        "baseName": "customer_id",
        "type": "string"
    },
    {
        "name": "afaReference",
        "baseName": "afa_reference",
        "type": "number"
    },
    {
        "name": "instrumentId",
        "baseName": "instrument_id",
        "type": "string"
    },
    {
        "name": "instrumentType",
        "baseName": "instrument_type",
        "type": "CFFetchAllSavedInstruments.InstrumentTypeEnum"
    },
    {
        "name": "instrumentUid",
        "baseName": "instrument_uid",
        "type": "string"
    },
    {
        "name": "instrumentDisplay",
        "baseName": "instrument_display",
        "type": "string"
    },
    {
        "name": "instrumentStatus",
        "baseName": "instrument_status",
        "type": "CFFetchAllSavedInstruments.InstrumentStatusEnum"
    },
    {
        "name": "createdAt",
        "baseName": "created_at",
        "type": "string"
    },
    {
        "name": "instrumentMeta",
        "baseName": "instrument_meta",
        "type": "CFSavedInstrumentMeta"
    }
];
(function (CFFetchAllSavedInstruments) {
    let InstrumentTypeEnum;
    (function (InstrumentTypeEnum) {
        InstrumentTypeEnum[InstrumentTypeEnum["Card"] = 'card'] = "Card";
    })(InstrumentTypeEnum = CFFetchAllSavedInstruments.InstrumentTypeEnum || (CFFetchAllSavedInstruments.InstrumentTypeEnum = {}));
    let InstrumentStatusEnum;
    (function (InstrumentStatusEnum) {
        InstrumentStatusEnum[InstrumentStatusEnum["Active"] = 'ACTIVE'] = "Active";
        InstrumentStatusEnum[InstrumentStatusEnum["Inactive"] = 'INACTIVE'] = "Inactive";
    })(InstrumentStatusEnum = CFFetchAllSavedInstruments.InstrumentStatusEnum || (CFFetchAllSavedInstruments.InstrumentStatusEnum = {}));
})(CFFetchAllSavedInstruments = exports.CFFetchAllSavedInstruments || (exports.CFFetchAllSavedInstruments = {}));
