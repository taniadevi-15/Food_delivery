"use strict";
/**
 * New Payment Gateway APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: nextgenapi@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CFPaymentsEntity = void 0;
class CFPaymentsEntity {
    static getAttributeTypeMap() {
        return CFPaymentsEntity.attributeTypeMap;
    }
}
exports.CFPaymentsEntity = CFPaymentsEntity;
CFPaymentsEntity.discriminator = undefined;
CFPaymentsEntity.attributeTypeMap = [
    {
        "name": "cfPaymentId",
        "baseName": "cf_payment_id",
        "type": "number"
    },
    {
        "name": "orderId",
        "baseName": "order_id",
        "type": "string"
    },
    {
        "name": "entity",
        "baseName": "entity",
        "type": "string"
    },
    {
        "name": "isCaptured",
        "baseName": "is_captured",
        "type": "boolean"
    },
    {
        "name": "orderAmount",
        "baseName": "order_amount",
        "type": "number"
    },
    {
        "name": "paymentGroup",
        "baseName": "payment_group",
        "type": "string"
    },
    {
        "name": "paymentCurrency",
        "baseName": "payment_currency",
        "type": "string"
    },
    {
        "name": "paymentAmount",
        "baseName": "payment_amount",
        "type": "number"
    },
    {
        "name": "paymentTime",
        "baseName": "payment_time",
        "type": "string"
    },
    {
        "name": "paymentStatus",
        "baseName": "payment_status",
        "type": "CFPaymentsEntity.PaymentStatusEnum"
    },
    {
        "name": "paymentMessage",
        "baseName": "payment_message",
        "type": "string"
    },
    {
        "name": "bankReference",
        "baseName": "bank_reference",
        "type": "string"
    },
    {
        "name": "authId",
        "baseName": "auth_id",
        "type": "string"
    },
    {
        "name": "authorization",
        "baseName": "authorization",
        "type": "CFAuthorizationInPaymentsEntity"
    },
    {
        "name": "paymentMethod",
        "baseName": "payment_method",
        "type": "CFPaymentsEntityPayment"
    }
];
(function (CFPaymentsEntity) {
    let PaymentStatusEnum;
    (function (PaymentStatusEnum) {
        PaymentStatusEnum[PaymentStatusEnum["Success"] = 'SUCCESS'] = "Success";
        PaymentStatusEnum[PaymentStatusEnum["NotAttempted"] = 'NOT_ATTEMPTED'] = "NotAttempted";
        PaymentStatusEnum[PaymentStatusEnum["Failed"] = 'FAILED'] = "Failed";
        PaymentStatusEnum[PaymentStatusEnum["UserDropped"] = 'USER_DROPPED'] = "UserDropped";
        PaymentStatusEnum[PaymentStatusEnum["Void"] = 'VOID'] = "Void";
        PaymentStatusEnum[PaymentStatusEnum["Cancelled"] = 'CANCELLED'] = "Cancelled";
        PaymentStatusEnum[PaymentStatusEnum["Pending"] = 'PENDING'] = "Pending";
    })(PaymentStatusEnum = CFPaymentsEntity.PaymentStatusEnum || (CFPaymentsEntity.PaymentStatusEnum = {}));
})(CFPaymentsEntity = exports.CFPaymentsEntity || (exports.CFPaymentsEntity = {}));
